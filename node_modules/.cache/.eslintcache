[{"/Users/tim/Documents/RCM專案/RCM_taskManage/src/index.js":"1","/Users/tim/Documents/RCM專案/RCM_taskManage/src/ManuallyCreate.js":"2","/Users/tim/Documents/RCM專案/RCM_taskManage/src/SortableTable.js":"3","/Users/tim/Documents/RCM專案/RCM_taskManage/src/ManuallyEdit.js":"4","/Users/tim/Documents/RCM專案/RCM_taskManage/src/ScheduleManagement.js":"5","/Users/tim/Documents/RCM專案/RCM_taskManage/src/WaitTable.js":"6","/Users/tim/Documents/RCM專案/RCM_taskManage/src/ReadyTable.js":"7","/Users/tim/Documents/RCM專案/RCM_taskManage/src/MutiTable.js":"8","/Users/tim/Documents/RCM專案/RCM_taskManage/src/Rcmalarmanalysis.js":"9","/Users/tim/Documents/RCM專案/RCM_taskManage/src/PlatoChart.js":"10","/Users/tim/Documents/RCM專案/RCM_taskManage/src/RcmOperationNews.js":"11","/Users/tim/Documents/RCM專案/RCM_taskManage/src/App.js":"12"},{"size":622,"mtime":1625449514076,"results":"13","hashOfConfig":"14"},{"size":5164,"mtime":1622867298087,"results":"15","hashOfConfig":"14"},{"size":7138,"mtime":1623982057945,"results":"16","hashOfConfig":"14"},{"size":5695,"mtime":1622868523023,"results":"17","hashOfConfig":"14"},{"size":7796,"mtime":1624847853923,"results":"18","hashOfConfig":"14"},{"size":6530,"mtime":1624585099785,"results":"19","hashOfConfig":"14"},{"size":7214,"mtime":1624596900288,"results":"20","hashOfConfig":"14"},{"size":15753,"mtime":1624934576338,"results":"21","hashOfConfig":"14"},{"size":5654,"mtime":1624950593480,"results":"22","hashOfConfig":"14"},{"size":1760,"mtime":1624947633038,"results":"23","hashOfConfig":"14"},{"size":2988,"mtime":1625132592989,"results":"24","hashOfConfig":"14"},{"size":6714,"mtime":1625449496997,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yydzr5",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/Users/tim/Documents/RCM專案/RCM_taskManage/src/index.js",[],"/Users/tim/Documents/RCM專案/RCM_taskManage/src/ManuallyCreate.js",[],["59","60"],"/Users/tim/Documents/RCM專案/RCM_taskManage/src/SortableTable.js",[],"/Users/tim/Documents/RCM專案/RCM_taskManage/src/ManuallyEdit.js",[],"/Users/tim/Documents/RCM專案/RCM_taskManage/src/ScheduleManagement.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74"],"/Users/tim/Documents/RCM專案/RCM_taskManage/src/WaitTable.js",["75","76","77","78","79","80","81","82","83","84","85","86","87","88"],"import React from \"react\";\nimport { Layout, Table, Popconfirm, Button, Col, Row, Card, PageHeader, Tooltip, Input, Space, Dropdown, Menu } from 'antd';\nimport './ScheduleManagement.css'\n// import { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\nimport { MenuOutlined } from '@ant-design/icons';\n// import arrayMove from 'array-move';\nimport ReadyTable from './ReadyTable';\n\n// const DragHandle = sortableHandle(() => <MenuOutlined style={{ cursor: 'grab', color: '#999' }} />);\n\n// const SortableItem = sortableElement(props => <tr {...props} />);\n// const SortableContainer = sortableContainer(props => <tbody {...props} />);\n\nclass WaitTable extends React.Component {\n    constructor(props){\n        super(props);\n        this.state ={\n          ready_data: props.ready_data,\n          wait_data: props.wait_data\n        }\n        this.columns=[];\n    } \n    // onSortEnd = ({ oldIndex, newIndex }) => {\n    //   const { wait_data } = this.state;\n    //   if (oldIndex !== newIndex) {\n    //     const newData = arrayMove([].concat(wait_data), oldIndex, newIndex).filter(el => !!el);\n    //     console.log('Sorted items: ', newData);\n    //     this.setState({ wait_data: newData });\n    //   }\n    // };\n  \n    // DraggableContainer = props => (\n    //   <SortableContainer\n    //     useDragHandle\n    //     disableAutoscroll\n    //     helperClass=\"row-dragging\"\n    //     onSortEnd={this.onSortEnd}\n    //     {...props}\n    //   />\n    // );\n  \n    // DraggableBodyRow = ({ className, style, ...restProps }) => {\n    //   const { wait_data } = this.state;\n    //   // function findIndex base on Table rowKey props and should always be a right array index\n    //   const index = wait_data.findIndex(x => x.index === restProps['data-row-key']);\n    //   return <SortableItem index={index} {...restProps} />;\n    // };\n\n    //點\"派\"後 傳遞資料\n    SubmitTask = (event) => {\n      //設定變數給當前的表格data\n      const wd = this.state.wait_data;\n      const rd = this.state.ready_data;\n      //設定變數給表格data 用於暫存變動\n      const new_wd = wd.slice();\n      const new_rd = rd.slice();\n      //整理派出的waitdata後面的key&index\n      const index = event.target.offsetParent.parentElement.attributes[0].nodeValue;\n      var i = parseInt(index) + 1; // i為點選到的下一筆資料\n      for(; i<new_wd.length ; ++i){  //開始回圈處理\n        new_wd[i].key = (parseInt(new_wd[i].key) - 1).toString();\n        --new_wd[i].index;\n      }\n      //整理派上的的data的key&index後再push到new_rd\n      var temp = wd[event.target.offsetParent.parentElement.attributes[0].nodeValue]\n      temp.index = new_rd.length;\n      var num = new_rd.length+1;\n      temp.key = num.toString();\n      temp.machineno = new_rd[0].machineno;\n      temp.priority = new_rd.length+1;\n      new_rd.push(temp);\n      //在new_wd移除選到的資料\n      new_wd.splice(event.target.offsetParent.parentElement.attributes[0].nodeValue, 1);  \n      //更新state\n      this.props.change(new_rd,new_wd);  //傳入父的function去set父的State\n      this.setState({ ready_data: new_rd }); // 更新自己的State\n      this.setState({ wait_data: new_wd });  // 更新自己的State\n    }\n\n    _ShowTask = () => {\n      const state = this.props.send();\n      this.setState({\n        wait_data: state.DataWait,\n        ready_data: state.DataReady\n      });\n    }\n\n  \n    render() {\n        const { wait_data } = this.state;\n        this.columns = [\n            {\n            title: '',\n            dataIndex: '',\n            width:60,\n            // fixed: \"left\",\n            // className: 'drag-visible',\n            // render: () => <DragHandle />,\n            },\n            {\n            title: \"選擇\",\n            dataIndex: \"option\",\n            width:60,\n            fixed: \"left\",\n            className: 'drag-visible',\n            render: () => (\n              <div className=\"option-btn-submit\" onClick={this.SubmitTask}>派</div>\n            )\n            },\n            {\n            title: \"機台號碼\",\n            dataIndex: \"machineno\",\n            width:100,\n            },\n            {\n            title: \"項次(排序)\",\n            dataIndex: \"priority\",\n            width:100,\n            },\n            {\n            title: \"Package\",\n            dataIndex: \"Package\",\n            width:120,\n            },\n            {\n            title: \"客戶代碼\",\n            dataIndex: \"customerid\",\n            width:100,\n            },\n            {\n            title: \"生產批號\",\n            dataIndex: \"lotid\",\n            width:150,\n            },\n            {\n            title: \"作業站\",\n            dataIndex: \"station\"\n            },\n            {\n            title: \"產品型號\",\n            dataIndex: \"modelno\"\n            },\n            {\n            title: \"現況數量\",\n            dataIndex: \"qty\",\n            width:100,\n            },\n            {\n            title: \"機台\",\n            dataIndex: \"platform\",\n            width:100,\n            },\n            {\n            title: \"儲區\",\n            dataIndex: \"location\"\n            },\n            {\n            title: \"儲位編號\",\n            dataIndex: \"locationid\",\n            width:100,\n            },\n            {\n            title: \"貨批狀況\",\n            dataIndex: \"status\"\n            },\n            {\n            title: \"入站時間\",\n            dataIndex: \"timein\"\n            },\n            {\n            title: \"UPH\",\n            dataIndex: \"uph\",\n            width:70,\n            },\n            {\n            title: \"BodySize\",\n            dataIndex: \"bodysize\",\n            width:100,\n            },\n            {\n            title: \"溫度\",\n            dataIndex: \"temp\",\n            width:60,\n            },\n            {\n            title: \"備註\",\n            dataIndex: \"remark\"\n            }\n        ];\n        this.readydata=[]\n        this.waitdata=[]\n  \n        return (\n          <div>\n              <div id=\"_trigger\" onClick={this._ShowTask}  style={{display:\"none\"}} >start</div>\n          <Table\n            pagination={false}\n            dataSource={wait_data}\n            columns={this.columns}\n            rowKey=\"index\"\n            scroll={{ x: 2200, y:300 }}\n            components={{\n              body: {\n              wrapper: this.DraggableContainer,\n              row: this.DraggableBodyRow,\n              },\n            }}\n          />\n          </div>\n        );\n    }\n  }\n\n  export default WaitTable",["89","90"],"/Users/tim/Documents/RCM專案/RCM_taskManage/src/ReadyTable.js",["91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106"],"import React from \"react\";\nimport { Layout, Table, Popconfirm, Button, Col, Row, Card, PageHeader, Tooltip, Input, Space, Dropdown, Menu } from 'antd';\nimport './ScheduleManagement.css'\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\nimport { MenuOutlined } from '@ant-design/icons';\nimport arrayMove from 'array-move';\nimport WaitTable from './WaitTable';\n\nconst DragHandle = sortableHandle(() => <MenuOutlined style={{ cursor: 'grab', color: '#999' }} />);\n\nconst SortableItem = sortableElement(props => <tr {...props} />);\nconst SortableContainer = sortableContainer(props => <tbody {...props} />);\n\nclass ReadyTable extends React.Component {\n    constructor(props){\n        super(props);\n        this.state ={\n          ready_data: props.ready_data,\n          wait_data: props.wait_data\n        }\n        this.columns=[];\n    };\n\n    onSortEnd = ({ oldIndex, newIndex }) => {\n      const { ready_data } = this.state;\n      const { wait_data } = this.state;\n      if(oldIndex != 0 && newIndex != 0){\n        if (oldIndex !== newIndex) {\n          //調動list的key index priority\n          const newData = arrayMove([].concat(ready_data), oldIndex, newIndex).filter(el => !!el);\n          var top = oldIndex > newIndex ? newIndex : oldIndex;\n          for(; newData.length > top; ++top){\n            newData[top].key = (top + 1).toString();\n            newData[top].index = top;\n            newData[top].priority = (top + 1).toString();\n          }\n          //更新state\n          this.setState({ ready_data: newData });\n          this.props.change(newData,wait_data); //傳入父的function去set父的State\n        }\n      }else{\n        alert(\"任務執行中,不可調動順序！\");\n      }\n    };\n  \n    DraggableContainer = props => (\n      <SortableContainer\n        useDragHandle\n        disableAutoscroll\n        helperClass=\"row-dragging\"\n        onSortEnd={this.onSortEnd}\n        {...props}\n      />\n    );\n  \n    DraggableBodyRow = ({ className, style, ...restProps }) => {\n      const { ready_data } = this.state;\n      // function findIndex base on Table rowKey props and should always be a right array index\n      const index = ready_data.findIndex(x => x.index === restProps['data-row-key']);\n\n      return <SortableItem index={index} {...restProps} />;\n    };\n\n    //點\"刪\"後 傳遞資料\n    MoveDownTask = (event) => {\n      //設定變數給當前的表格data\n      const wd = this.state.wait_data;\n      const rd = this.state.ready_data;\n      //設定變數給表格data 用於暫存變動\n      const new_wd = wd.slice();\n      const new_rd = rd.slice();\n      //整理派出的readydata後面的key&index&priority\n      const index = event.target.offsetParent.parentElement.attributes[0].nodeValue;\n      if(index != 0){\n        var i = parseInt(index) + 1; // i為點選到的下一筆資料\n        for(; i<new_rd.length ; ++i){  //開始回圈處理\n          new_rd[i].key = (parseInt(new_rd[i].key) - 1).toString();\n          --new_rd[i].index;\n          --new_rd[i].priority;\n        }\n        //整理派出的的data的key&index後再push到new_wd\n        var temp = rd[event.target.offsetParent.parentElement.attributes[0].nodeValue];\n        temp.index = new_wd.length;\n        var num = new_wd.length+1;\n        temp.key = num.toString();\n        temp.machineno = \"\";\n        temp.priority = \"\";\n        new_wd.push(temp);\n\n        //在new_rd移除選到的資料\n        new_rd.splice(event.target.offsetParent.parentElement.attributes[0].nodeValue, 1);  \n        //更新state\n        this.props.change(new_rd,new_wd);  //傳入父的function去set父的State\n        this.setState({\n          ready_data: new_rd,\n          wait_data: new_wd\n        }); // 更新自己的State\n      }else{\n        alert(\"任務執行中,不可刪除！\");\n      }\n    }\n\n\n\n    ShowTask = () => {\n      const state = this.props.send();\n      this.setState({\n        wait_data: state.DataWait,\n        ready_data: state.DataReady\n      });\n    }\n    \n    render() {\n        const { ready_data } = this.state;\n        this.columns = [\n            {\n            title: '拖拉',\n            dataIndex: 'sort',\n            width:60,\n            fixed: \"left\",\n            className: 'drag-visible',\n              render: () => {\n                return <DragHandle />\n              }\n            },\n            {\n            title: \"選擇\",\n            dataIndex: \"option\",\n            width:60,\n            fixed: \"left\",\n            className: 'drag-visible',\n            render: () => (\n              <div className=\"option-btn-delete\" onClick={this.MoveDownTask}>刪</div>\n              )\n            },\n            {\n            title: \"機台號碼\",\n            dataIndex: \"machineno\",\n            width:100,\n            },\n            {\n            title: \"項次(排序)\",\n            dataIndex: \"priority\",\n            width:100,\n            },\n            {\n            title: \"Package\",\n            dataIndex: \"Package\",\n            width:120,\n            },\n            {\n            title: \"客戶代碼\",\n            dataIndex: \"customerid\",\n            width:100,\n            },\n            {\n            title: \"生產批號\",\n            dataIndex: \"lotid\",\n            width:150,\n            },\n            {\n            title: \"作業站\",\n            dataIndex: \"station\"\n            },\n            {\n            title: \"產品型號\",\n            dataIndex: \"modelno\"\n            },\n            {\n            title: \"現況數量\",\n            dataIndex: \"qty\",\n            width:100,\n            },\n            {\n            title: \"機台\",\n            dataIndex: \"platform\",\n            width:100,\n            },\n            {\n            title: \"儲區\",\n            dataIndex: \"location\"\n            },\n            {\n            title: \"儲位編號\",\n            dataIndex: \"locationid\",\n            width:100,\n            },\n            {\n            title: \"貨批狀況\",\n            dataIndex: \"status\"\n            },\n            {\n            title: \"入站時間\",\n            dataIndex: \"timein\"\n            },\n            {\n            title: \"UPH\",\n            dataIndex: \"uph\",\n            width:70,\n            },\n            {\n            title: \"BodySize\",\n            dataIndex: \"bodysize\",\n            width:100,\n            },\n            {\n            title: \"溫度\",\n            dataIndex: \"temp\",\n            width:60,\n            },\n            {\n            title: \"備註\",\n            dataIndex: \"remark\"\n            }\n        ];\n        this.readydata=[];\n        this.waitdata=[];\n  \n        return (\n            <div>\n              <div id=\"trigger\" onClick={this.ShowTask}  style={{display:\"none\"}} >start</div>\n              <Table\n              pagination={false}\n              dataSource={ready_data}\n              columns={this.columns}\n              rowKey=\"index\"\n              scroll={{ x: 2200, y:300 }}\n              components={{\n                  body: {\n                  wrapper: this.DraggableContainer,\n                  row: this.DraggableBodyRow,\n                  },\n              }}\n              />\n            </div>\n        );\n    }\n  }\n\n  export default ReadyTable","/Users/tim/Documents/RCM專案/RCM_taskManage/src/MutiTable.js",["107","108","109"],"/Users/tim/Documents/RCM專案/RCM_taskManage/src/Rcmalarmanalysis.js",["110","111","112","113"],"import React from \"react\";\n//import { connect } from 'react-redux'\n//import PropTypes from \"prop-types\"\nimport { Layout, Table, Space, DatePicker, Button, Select, Input, Descriptions, Card, Col, Row, Typography, Modal } from 'antd';\n//import Mynavbar from \"../Global/Mynavbar.js\"\n//import JSMpeg from 'jsmpeg-player'\nimport './Rcmalarmanalysis.css'\n//import translate from '../../lang/translate'\nimport { SearchOutlined, FileExcelOutlined, BarChartOutlined } from '@ant-design/icons';\nimport PlatoChart from './PlatoChart';\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\nconst { Text } = Typography\n\nclass Rcmalarmanalysis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n    };\n  }\n\n  setModalVisible(modalVisible) {\n    this.setState({ modalVisible });\n  }\n  componentDidMount() {\n\n  }\n  componentWillUnmount() {\n\n  }\n  handleCenter() {\n\n  }\n  handleRotation() {\n\n  }\n  render() {\n    this.columns = [\n      {\n        title: '機台編號',\n        dataIndex: \"machineid\",\n        key: \"machineid\"\n      },\n      {\n        title: '警報類型',\n        dataIndex: \"alarmtype\",\n        key: \"alarmtype\"\n      },\n      {\n        title: '警報次數',\n        dataIndex: \"alerttimes\",\n        key: \"alerttimes\",\n        sorter: (a, b) => a.alerttimes.length - b.alerttimes.length,\n        sortDirections: [\"descend\", \"ascend\"],\n        filterDropdown: true,\n        filterIcon: () => {\n        return (\n          <Button onClick={() => this.setModalVisible(true)} style={{padding:'2px 5px'}}>\n            <BarChartOutlined style={{ fontSize: '24px' }} />\n          </Button>\n          );\n        }\n      },\n      {\n        title: '累計時間',\n        dataIndex: \"totaltime\",\n        key: \"totaltime\",\n        sorter: (a, b) => a.totaltime.length - b.totaltime.length,\n        sortDirections: [\"descend\", \"ascend\"],\n        filterDropdown: true,\n        filterIcon: () => {\n        return (\n          <Button onClick={() => this.setModalVisible(true)} style={{padding:'2px 5px'}}>\n            <BarChartOutlined style={{ fontSize: '24px' }} />\n          </Button>\n          );\n        }\n      }\n    ]\n    this.data = [\n      {\n        key: 1,\n        machineid: \"DX13\",\n        alarmtype: \"S\",\n        alerttimes: 5,\n        totaltime: 15\n      },\n      {\n        key: 2,\n        machineid: \"DX13\",\n        alarmtype: \"A\",\n        alerttimes: 2,\n        totaltime: 30\n      },\n      {\n        key: 3,\n        machineid: \"DX13\",\n        alarmtype: \"K\",\n        alerttimes: 30,\n        totaltime: 100\n      },\n      {\n        key: 4,\n        machineid: \"DX13\",\n        alarmtype: \"Q\",\n        alerttimes: 18,\n        totaltime: 77\n      },\n      {\n        key: 5,\n        machineid: \"DX13\",\n        alarmtype: \"R\",\n        alerttimes: 4,\n        totaltime: 20\n      },\n      {\n        key: 6,\n        machineid: \"DX13\",\n        alarmtype: \"M\",\n        alerttimes: 35,\n        totaltime: 69\n      },\n      {\n        key: 7,\n        machineid: \"DX13\",\n        alarmtype: \"G\",\n        alerttimes: 1,\n        totaltime: 5\n      }\n    ]\n    return (\n      <div className=\"ant-content-children\">\n        <Card>\n          <Row gutter={[24, 24]} justify=\"end\">\n            <Col className=\"\" xs={24} sm={9} md={9} lg={9} xl={9}>\n              <Text>時間區間：</Text>\n              <RangePicker className=\"\" />\n            </Col>\n            <Col className=\"\" xs={5} sm={5} md={5} lg={4} xl={4}>\n              <Select placeholder=\"選擇調查事項\" style={{ width: '150px', textAlign: 'center' }}>\n                <Option value={0}>機台類型</Option>\n                <Option value={1}>機台編號</Option>\n                <Option value={2}>警報類型</Option>\n                <Option value={3}>警報號碼</Option>\n              </Select>\n            </Col>\n            <Col className=\"\" xs={5} sm={5} md={5} lg={4} xl={4}>\n              <Select placeholder=\"輔助選項\" style={{ width: '150px', textAlign: 'center' }}>\n                <Option value={0}>UF3000</Option>\n                <Option value={1}>OPUS3</Option>\n              </Select>\n            </Col>\n            <Col className=\"\" xs={5} sm={5} md={5} lg={5} xl={5}>\n              <Select placeholder=\"選擇分類項目(Ｘ軸)\" style={{ width: '180px', textAlign: 'center' }}>\n                <Option value={0}>警報類型</Option>\n                <Option value={1}>警報號碼</Option>\n                <Option value={2}>機台類型</Option>\n                <Option value={3}>機台編號</Option>\n              </Select>\n            </Col>\n            <Col className=\"\" xs={3} sm={3} md={3} lg={3} xl={2}>\n              <Button type='primary' icon={<SearchOutlined />}>搜尋</Button>\n            </Col>\n          </Row>\n        </Card>\n        <Card>\n          <span className=\"rcmalarmanalysis-table-headremarks\">資料區間：2021/5/1 ~ 2021/5/30</span>\n          <Button className=\"rcmalarmanalysis-btn-exportexcel\" type='primary' icon={<FileExcelOutlined />}>匯出Excel</Button>\n          <Table className=\"rcmalarmanalysis-table\" bordered columns={this.columns} dataSource={this.data}/>\n        </Card>\n        <Modal\n          title=\"調查事項：機台編號\"\n          width={1000}\n          centered\n          visible={this.state.modalVisible}\n          onOk={() => this.setModalVisible(false)}\n          onCancel={() => this.setModalVisible(false)}\n          okText=\"匯出圖檔\"\n          cancelText=\"關閉\"\n        >\n          <p>時間區間：2021/5/1 ~ 2021/5/30</p>\n          <div><PlatoChart /></div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default Rcmalarmanalysis;","/Users/tim/Documents/RCM專案/RCM_taskManage/src/PlatoChart.js",["114","115"],"import React, { useState, useEffect } from \"react\";\nimport { DualAxes } from \"@ant-design/charts\";\n\nconst PlatoChart = () => {\n  var data = [\n    {\n      alerttype: \"M\",\n      times: 75,\n      count: 75\n    },\n    {\n      alerttype: \"K\",\n      times: 10,\n      count: 85\n    },\n    {\n      alerttype: \"Q\",\n      times: 6,\n      count: 91\n    },\n    {\n      alerttype: \"S\",\n      times: 3,\n      count: 94\n    },\n    {\n      alerttype: \"R\",\n      times: 1,\n      count: 95\n    },\n    {\n      alerttype: \"others\",\n      times: 5,\n      count: 100\n    }\n  ];\n  var config = {\n    data: [data, data],\n    xField: \"alerttype\",\n    yField: [\"times\", \"count\"],\n    yAxis: {\n      value: {\n        min: 0,\n        label: {\n          formatter: function formatter(val) {\n            return \"\".concat(val, \"次\");\n          }\n        }\n      },\n      count: false\n    },\n    meta: {\n      times: { min: 0, max: 100 },\n      count: { min: 0, max: 100 }\n    },\n    geometryOptions: [\n      {\n        geometry: \"column\",\n        color: \"#5B8FF9\",\n        columnWidthRatio: 1,\n        label: { position: \"middle\" }\n      },\n      {\n        geometry: \"line\",\n        smooth: false,\n        color: \"#5AD8A6\",\n        lineStyle: {\n          lineWidth: 4,\n          opacity: 0.7\n        },\n        label: {\n          formatter: function formatter(datum) {\n            return \"\".concat(datum.count, \"次\");\n          }\n        },\n        point: {\n          shape: \"circle\",\n          size: 4,\n          style: {\n            opacity: 0.5,\n            stroke: \"#5AD8A6\",\n            fill: \"#fff\"\n          }\n        }\n      }\n    ],\n    interactions: [{ type: \"element-highlight\" }, { type: \"active-region\" }]\n  };\n  return <DualAxes {...config} />;\n};\n\nexport default PlatoChart;\n",["116","117"],"/Users/tim/Documents/RCM專案/RCM_taskManage/src/RcmOperationNews.js",["118","119","120","121"],"import React from \"react\";\nimport { Card, Col, Row} from 'antd';\nimport './RcmOperationNews.css';\n//konva\nimport { Stage, Layer, Rect, Text, Line } from \"react-konva\";\n\n\n\nclass Rcmoperationnews extends React.Component {\n  static propTypes = {\n  }\n  constructor(props) {\n    super(props);\n    this.data=[];\n    this.state = {\n    };\n  }\n  componentDidMount() {\n  }\n  componentWillUnmount() {\n  }\n  render() {\n    this.data =[\n      {\n        machinenumber:\"DX01\", \n        machinestatus:[\"running\", \"idle\", \"alarm\", \"shutdown\"],\n        sign:[\"green\",\"yellow\",\"red\",\"grey\"],\n        starttime:[\"\", \"\", \"\",\"\"],\n        endtime:[\"\", \"\", \"\",\"\"],\n      },\n      {\n        machinenumber:\"DX02\", \n        machinestatus:[\"running\", \"idle\", \"alarm\", \"shutdown\", \"idle\"],\n        sign:[\"green\",\"yellow\",\"red\",\"grey\",\"yellow\"],\n        starttime:[\"\", \"\", \"\",\"\",\"\"],\n        endtime:[\"\", \"\", \"\",\"\",\"\"],\n      },\n      {\n        machinenumber:\"DX03\", \n        machinestatus:[\"running\", \"idle\", \"alarm\", \"shutdown\", \"idle\"],\n        sign:[\"green\",\"yellow\",\"red\",\"grey\",\"yellow\"],\n        starttime:[\"\", \"\", \"\",\"\",\"\"],\n        endtime:[\"\", \"\", \"\",\"\",\"\"],\n      }\n    ];\n    return ( \n      <div className=\"ant-content-children\">\n        {/* {this.test} */}\n        <Stage width={window.innerWidth} height={window.innerHeight}>\n          <Layer>\n            <Text text={this.data[0].machinenumber} fontSize={15} x={50} y={60} />\n            <Rect x={100} width={210} y={50} height={30} fill={this.data[0].sign[0]} />\n            <Rect x={310} width={270} y={50} height={30} fill={this.data[0].sign[1]} />\n            <Rect x={580} width={40} y={50} height={30} fill={this.data[0].sign[2]} />\n            <Rect x={620} width={280} y={50} height={30} fill={this.data[0].sign[3]} />\n          </Layer>\n          <Layer>\n            <Text text={this.data[1].machinenumber} fontSize={15} x={50} y={110} />\n            <Rect x={100} width={80} y={100} height={30} fill={this.data[1].sign[0]} />\n            <Rect x={180} width={240} y={100} height={30} fill={this.data[1].sign[1]} />\n            <Rect x={420} width={180} y={100} height={30} fill={this.data[1].sign[2]} />\n            <Rect x={600} width={140} y={100} height={30} fill={this.data[1].sign[3]} />\n            <Rect x={740} width={160} y={100} height={30} fill={this.data[1].sign[4]} />\n          </Layer>\n          <Layer>\n            <Text text={this.data[2].machinenumber} fontSize={15} x={50} y={160} />\n            <Rect x={100} width={100} y={150} height={30} fill={this.data[2].sign[0]} />\n            <Rect x={200} width={150} y={150} height={30} fill={this.data[2].sign[1]} />\n            <Rect x={350} width={200} y={150} height={30} fill={this.data[2].sign[2]} />\n            <Rect x={550} width={300} y={150} height={30} fill={this.data[2].sign[3]} />\n            <Rect x={850} width={50} y={150} height={30} fill={this.data[2].sign[4]} />\n          </Layer>\n        </Stage>\n      </div>\n    )\n  }\n}\n\nexport default Rcmoperationnews;","/Users/tim/Documents/RCM專案/RCM_taskManage/src/App.js",["122","123"],"import React, { useState } from \"react\";\nimport { Table, Input, InputNumber, Popconfirm, Form, Typography } from 'antd';\nimport './App.css';\n\nconst originData = [];\nfor (let i = 0; i < 100; i++) {\n  originData.push({\n    key: i.toString(),\n    item: i+1,\n    machinenumber: 'DX'+ (i+1),\n    machinetype: 'UF3000',\n    rcmip:`192.168.1. ${i}`,\n    rcmport: '8001',\n    lightip: `92.168.2. ${i}`,\n    lightport: '8000',\n  });\n}\n\n\nconst EditableCell = ({\n    editing,\n    dataIndex,\n    title,\n    inputType,\n    record,\n    index,\n    children,\n    ...restProps\n  }) => {\n    const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item\n            name={dataIndex}\n            style={{\n              margin: 0,\n            }}\n            rules={[\n              {\n                required: true,\n                message: `Please Input ${title}!`,\n              },\n            ]}\n          >\n            {inputNode}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n};\n\nconst EditableTable = () => {\n    const [form] = Form.useForm();\n    const [data, setData] = useState(originData);\n    const [editingKey, setEditingKey] = useState('');\n    const isEditing = (record) => record.key === editingKey;\n  \n    const edit = (record) => {\n      form.setFieldsValue({\n        item: '',\n        machinenumber: '',\n        machinetype: '',\n        rcmip: '',\n        rcmport: '',\n        lightip: '',\n        lightport: '',\n        ...record,\n      });\n      setEditingKey(record.key);\n    };\n  \n    const cancel = () => {\n      setEditingKey('');\n    };\n  \n    const save = async (key) => {\n      try {\n        const row = await form.validateFields();\n        const newData = [...data];\n        const index = newData.findIndex((item) => key === item.key);\n  \n        if (index > -1) {\n          const item = newData[index];\n          newData.splice(index, 1, { ...item, ...row });\n          setData(newData);\n          setEditingKey('');\n        } else {\n          newData.push(row);\n          setData(newData);\n          setEditingKey('');\n        }\n      } catch (errInfo) {\n        console.log('Validate Failed:', errInfo);\n      }\n    };\n  \n    const columns = [\n        {\n            title: '項次',\n            dataIndex: 'item',\n            width: '5%',\n            editable: false,\n        },\n        {\n            title: '機台編號',\n            dataIndex: 'machinenumber',\n            width: '10%',\n            editable: true,\n        },\n        {\n            title: '機台類型',\n            dataIndex: 'machinetype',\n            width: '10%',\n            editable: true,\n        },\n        {\n            title: 'RCM IP',\n            dataIndex: 'rcmip',\n            width: '20%',\n            editable: true,\n        },\n        {\n            title: 'RCM Port',\n            dataIndex: 'rcmport',\n            width: '10%',\n            editable: true,\n        },\n        {\n            title: '三色燈IP',\n            dataIndex: 'lightip',\n            width: '20%',\n            editable: true,\n        },\n        {\n            title: '三色燈Port',\n            dataIndex: 'lightport',\n            width: '10%',\n            editable: true,\n        },\n        {\n            title: '編輯',\n            dataIndex: 'edit',\n            width: '15%',\n            render: (_, record) => {\n            const editable = isEditing(record);\n            return editable ? (\n                <span>\n                <a\n                    // href=\"javascript:;\"\n                    onClick={() => save(record.key)}\n                    style={{\n                    marginRight: 8,\n                    }}\n                >\n                    Save\n                </a>\n                <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n                    <a>Cancel</a>\n                </Popconfirm>\n                </span>\n            ) : (\n                <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\n                Edit\n                </Typography.Link>\n            );\n            },\n        },\n    ];\n    const mergedColumns = columns.map((col) => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: (record) => ({\n          record,\n          // inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: isEditing(record),\n        }),\n      };\n    });\n    return (\n      <Form form={form} component={false}>\n        <Table \n          components={{\n            body: {\n              cell: EditableCell,\n            },\n          }}\n          bordered={true}\n          dataSource={data}\n          columns={mergedColumns}\n          rowClassName=\"editable-row\"\n          pagination={{\n            onChange: cancel,\n          }}\n        />\n      </Form>\n    );\n};\n\n\n// class App extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {\n//       };\n//     }\n//     EditableCell = ({\n//         editing,\n//         dataIndex,\n//         title,\n//         inputType,\n//         record,\n//         index,\n//         children,\n//         ...restProps\n//       }) => {\n//         const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n//         return (\n//           <td {...restProps}>\n//             {editing ? (\n//               <Form.Item\n//                 name={dataIndex}\n//                 style={{\n//                   margin: 0,\n//                 }}\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: `Please Input ${title}!`,\n//                   },\n//                 ]}\n//               >\n//                 {inputNode}\n//               </Form.Item>\n//             ) : (\n//               children\n//             )}\n//           </td>\n//         );\n//     };\n//     render() {\n//       return ( \n//         <div className=\"ant-content-children\">\n//             <Form form={form} component={false}>\n//                 <Table\n//                 components={{\n//                     body: {\n//                     cell: this.EditableCell,\n//                     },\n//                 }}\n//                 bordered={true}\n//                 dataSource={data}\n//                 columns={mergedColumns}\n//                 rowClassName=\"editable-row\"\n//                 pagination={{\n//                     onChange: cancel,\n//                 }}\n//                 />\n//             </Form>\n//         </div>\n//       )\n//     }\n//   }\n  \nexport default EditableTable;\n// export default App;",{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"132","line":2,"column":18,"nodeType":"130","messageId":"131","endLine":2,"endColumn":23},{"ruleId":"128","severity":1,"message":"133","line":2,"column":25,"nodeType":"130","messageId":"131","endLine":2,"endColumn":35},{"ruleId":"128","severity":1,"message":"134","line":2,"column":80,"nodeType":"130","messageId":"131","endLine":2,"endColumn":87},{"ruleId":"128","severity":1,"message":"135","line":2,"column":96,"nodeType":"130","messageId":"131","endLine":2,"endColumn":101},{"ruleId":"128","severity":1,"message":"136","line":2,"column":103,"nodeType":"130","messageId":"131","endLine":2,"endColumn":111},{"ruleId":"128","severity":1,"message":"137","line":6,"column":10,"nodeType":"130","messageId":"131","endLine":6,"endColumn":22},{"ruleId":"128","severity":1,"message":"138","line":13,"column":9,"nodeType":"130","messageId":"131","endLine":13,"endColumn":15},{"ruleId":"128","severity":1,"message":"139","line":14,"column":7,"nodeType":"130","messageId":"131","endLine":14,"endColumn":15},{"ruleId":"128","severity":1,"message":"140","line":15,"column":7,"nodeType":"130","messageId":"131","endLine":15,"endColumn":11},{"ruleId":"141","severity":1,"message":"142","line":184,"column":20,"nodeType":"143","messageId":"144","endLine":184,"endColumn":22},{"ruleId":"141","severity":1,"message":"142","line":186,"column":26,"nodeType":"143","messageId":"144","endLine":186,"endColumn":28},{"ruleId":"141","severity":1,"message":"142","line":188,"column":26,"nodeType":"143","messageId":"144","endLine":188,"endColumn":28},{"ruleId":"141","severity":1,"message":"142","line":190,"column":26,"nodeType":"143","messageId":"144","endLine":190,"endColumn":28},{"ruleId":"128","severity":1,"message":"145","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":16},{"ruleId":"128","severity":1,"message":"133","line":2,"column":25,"nodeType":"130","messageId":"131","endLine":2,"endColumn":35},{"ruleId":"128","severity":1,"message":"146","line":2,"column":37,"nodeType":"130","messageId":"131","endLine":2,"endColumn":43},{"ruleId":"128","severity":1,"message":"147","line":2,"column":45,"nodeType":"130","messageId":"131","endLine":2,"endColumn":48},{"ruleId":"128","severity":1,"message":"148","line":2,"column":50,"nodeType":"130","messageId":"131","endLine":2,"endColumn":53},{"ruleId":"128","severity":1,"message":"149","line":2,"column":55,"nodeType":"130","messageId":"131","endLine":2,"endColumn":59},{"ruleId":"128","severity":1,"message":"150","line":2,"column":61,"nodeType":"130","messageId":"131","endLine":2,"endColumn":71},{"ruleId":"128","severity":1,"message":"134","line":2,"column":73,"nodeType":"130","messageId":"131","endLine":2,"endColumn":80},{"ruleId":"128","severity":1,"message":"151","line":2,"column":82,"nodeType":"130","messageId":"131","endLine":2,"endColumn":87},{"ruleId":"128","severity":1,"message":"135","line":2,"column":89,"nodeType":"130","messageId":"131","endLine":2,"endColumn":94},{"ruleId":"128","severity":1,"message":"136","line":2,"column":96,"nodeType":"130","messageId":"131","endLine":2,"endColumn":104},{"ruleId":"128","severity":1,"message":"152","line":2,"column":106,"nodeType":"130","messageId":"131","endLine":2,"endColumn":110},{"ruleId":"128","severity":1,"message":"153","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":22},{"ruleId":"128","severity":1,"message":"154","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":18},{"ruleId":"124","replacedBy":"155"},{"ruleId":"126","replacedBy":"156"},{"ruleId":"128","severity":1,"message":"145","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":16},{"ruleId":"128","severity":1,"message":"133","line":2,"column":25,"nodeType":"130","messageId":"131","endLine":2,"endColumn":35},{"ruleId":"128","severity":1,"message":"146","line":2,"column":37,"nodeType":"130","messageId":"131","endLine":2,"endColumn":43},{"ruleId":"128","severity":1,"message":"147","line":2,"column":45,"nodeType":"130","messageId":"131","endLine":2,"endColumn":48},{"ruleId":"128","severity":1,"message":"148","line":2,"column":50,"nodeType":"130","messageId":"131","endLine":2,"endColumn":53},{"ruleId":"128","severity":1,"message":"149","line":2,"column":55,"nodeType":"130","messageId":"131","endLine":2,"endColumn":59},{"ruleId":"128","severity":1,"message":"150","line":2,"column":61,"nodeType":"130","messageId":"131","endLine":2,"endColumn":71},{"ruleId":"128","severity":1,"message":"134","line":2,"column":73,"nodeType":"130","messageId":"131","endLine":2,"endColumn":80},{"ruleId":"128","severity":1,"message":"151","line":2,"column":82,"nodeType":"130","messageId":"131","endLine":2,"endColumn":87},{"ruleId":"128","severity":1,"message":"135","line":2,"column":89,"nodeType":"130","messageId":"131","endLine":2,"endColumn":94},{"ruleId":"128","severity":1,"message":"136","line":2,"column":96,"nodeType":"130","messageId":"131","endLine":2,"endColumn":104},{"ruleId":"128","severity":1,"message":"152","line":2,"column":106,"nodeType":"130","messageId":"131","endLine":2,"endColumn":110},{"ruleId":"128","severity":1,"message":"157","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":17},{"ruleId":"141","severity":1,"message":"158","line":27,"column":19,"nodeType":"143","messageId":"144","endLine":27,"endColumn":21},{"ruleId":"141","severity":1,"message":"158","line":27,"column":36,"nodeType":"143","messageId":"144","endLine":27,"endColumn":38},{"ruleId":"141","severity":1,"message":"158","line":74,"column":16,"nodeType":"143","messageId":"144","endLine":74,"endColumn":18},{"ruleId":"128","severity":1,"message":"146","line":2,"column":17,"nodeType":"130","messageId":"131","endLine":2,"endColumn":23},{"ruleId":"128","severity":1,"message":"151","line":2,"column":25,"nodeType":"130","messageId":"131","endLine":2,"endColumn":30},{"ruleId":"128","severity":1,"message":"135","line":2,"column":32,"nodeType":"130","messageId":"131","endLine":2,"endColumn":37},{"ruleId":"128","severity":1,"message":"145","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":16},{"ruleId":"128","severity":1,"message":"135","line":4,"column":25,"nodeType":"130","messageId":"131","endLine":4,"endColumn":30},{"ruleId":"128","severity":1,"message":"151","line":4,"column":60,"nodeType":"130","messageId":"131","endLine":4,"endColumn":65},{"ruleId":"128","severity":1,"message":"159","line":4,"column":67,"nodeType":"130","messageId":"131","endLine":4,"endColumn":79},{"ruleId":"128","severity":1,"message":"160","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"161","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"124","replacedBy":"162"},{"ruleId":"126","replacedBy":"163"},{"ruleId":"128","severity":1,"message":"149","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"147","line":2,"column":16,"nodeType":"130","messageId":"131","endLine":2,"endColumn":19},{"ruleId":"128","severity":1,"message":"148","line":2,"column":21,"nodeType":"130","messageId":"131","endLine":2,"endColumn":24},{"ruleId":"128","severity":1,"message":"164","line":5,"column":36,"nodeType":"130","messageId":"131","endLine":5,"endColumn":40},{"ruleId":"165","severity":1,"message":"166","line":151,"column":17,"nodeType":"167","endLine":157,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":161,"column":21,"nodeType":"167","endLine":161,"endColumn":24},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'Popconfirm' is defined but never used.","'Tooltip' is defined but never used.","'Space' is defined but never used.","'Dropdown' is defined but never used.","'DownOutlined' is defined but never used.","'Search' is assigned a value but never used.","'onSearch' is assigned a value but never used.","'menu' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Layout' is defined but never used.","'Button' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Card' is defined but never used.","'PageHeader' is defined but never used.","'Input' is defined but never used.","'Menu' is defined but never used.","'MenuOutlined' is defined but never used.","'ReadyTable' is defined but never used.",["168"],["169"],"'WaitTable' is defined but never used.","Expected '!==' and instead saw '!='.","'Descriptions' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.",["168"],["169"],"'Line' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]