{"ast":null,"code":"var _jsxFileName = \"/Users/tim/Documents/React/React_test/src/SortableTable.js\";\nimport React from \"react\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport { MenuOutlined } from '@ant-design/icons';\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\nimport { Button, Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DragHandle = sortableHandle(_c = () => /*#__PURE__*/_jsxDEV(MenuOutlined, {\n  style: {\n    cursor: 'grab',\n    color: '#999'\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 41\n}, this));\n_c2 = DragHandle;\n\nfunction changeOrderStatus(event) {\n  event.target.parentNode.parentNode.nextSibling.textContent = \"已派工\";\n  event.target.parentNode.parentNode.nextSibling.style.color = \"blue\";\n}\n\nclass SortableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: this.props.data,\n      metadata: this.props.metadata\n    };\n  }\n  /*onSortEnd = ({ oldIndex, newIndex }) => {\n  \tconst { dataSource } = this.state;\n  \tif (oldIndex !== newIndex) {\n  \t\tconst newData = arrayMove([].concat(dataSource), oldIndex, newIndex).filter(el => !!el);\n      \tconsole.log('Sorted items: ', newData);\n      \tthis.setState({ dataSource: newData });\n  \t}\n  };\n  DraggableContainer = props => (\n  \t<SortableContainer\n  \t\tuseDragHandle\n      \tdisableAutoscroll\n      \thelperClass=\"row-dragging\"\n      \tonSortEnd={this.onSortEnd}\n      \t{...props}\n    \t/>\n  );\n     DraggableBodyRow = ({ className, style, ...restProps }) => {\n    \tconst { dataSource } = this.state;\n    \tconst index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\n    \treturn <SortableItem index={index} {...restProps} />;\n  };*/\n\n\n  render() {\n    const {\n      dataSource\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Table, {\n      pagination: false,\n      columns: this.props.metadata,\n      dataSource: this.props.data,\n      rowKey: \"index\",\n      components: {\n        body: {\n          wrapper: this.DraggableContainer,\n          row: this.DraggableBodyRow\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default SortableTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DragHandle$sortableHandle\");\n$RefreshReg$(_c2, \"DragHandle\");","map":{"version":3,"sources":["/Users/tim/Documents/React/React_test/src/SortableTable.js"],"names":["React","ReactTable","MenuOutlined","sortableContainer","sortableElement","sortableHandle","Button","Table","DragHandle","cursor","color","changeOrderStatus","event","target","parentNode","nextSibling","textContent","style","SortableTable","Component","constructor","props","state","dataSource","data","metadata","render","body","wrapper","DraggableContainer","row","DraggableBodyRow"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,+BAAP;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,iBAAT,EAA4BC,eAA5B,EAA6CC,cAA7C,QAAmE,oBAAnE;AACA,SAASC,MAAT,EAAgBC,KAAhB,QAA6B,MAA7B;;AAGA,MAAMC,UAAU,GAAGH,cAAc,MAAC,mBAAM,QAAC,YAAD;AAAc,EAAA,KAAK,EAAE;AAAEI,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,KAAK,EAAE;AAAzB;AAArB;AAAA;AAAA;AAAA;AAAA,QAAP,CAAjC;MAAMF,U;;AACN,SAASG,iBAAT,CAA2BC,KAA3B,EAAiC;AAChCA,EAAAA,KAAK,CAACC,MAAN,CAAaC,UAAb,CAAwBA,UAAxB,CAAmCC,WAAnC,CAA+CC,WAA/C,GAA6D,KAA7D;AACAJ,EAAAA,KAAK,CAACC,MAAN,CAAaC,UAAb,CAAwBA,UAAxB,CAAmCC,WAAnC,CAA+CE,KAA/C,CAAqDP,KAArD,GAA6D,MAA7D;AACA;;AACD,MAAMQ,aAAN,SAA4BlB,KAAK,CAACmB,SAAlC,CAA4C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWG,IADX;AAEZC,MAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI;AAFT,KAAb;AAIG;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGIC,EAAAA,MAAM,GAAG;AACN,UAAM;AAAEH,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,wBACE,QAAC,KAAD;AACG,MAAA,UAAU,EAAE,KADf;AAEG,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWI,QAFvB;AAGL,MAAA,UAAU,EAAG,KAAKJ,KAAL,CAAWG,IAHnB;AAIG,MAAA,MAAM,EAAC,OAJV;AAKG,MAAA,UAAU,EACjB;AACCG,QAAAA,IAAI,EAAE;AACLC,UAAAA,OAAO,EAAE,KAAKC,kBADT;AAELC,UAAAA,GAAG,EAAE,KAAKC;AAFL;AADP;AANI;AAAA;AAAA;AAAA;AAAA,YADF;AAgBF;;AAlDuC;;AAqD5C,eAAeb,aAAf","sourcesContent":["\nimport React from \"react\";\nimport ReactTable from \"react-table-6\";  \nimport \"react-table-6/react-table.css\";\nimport { MenuOutlined } from '@ant-design/icons';\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\nimport { Button,Table } from 'antd';\n\n\nconst DragHandle = sortableHandle(() => <MenuOutlined style={{ cursor: 'grab', color: '#999' }} />);\nfunction changeOrderStatus(event){\n\tevent.target.parentNode.parentNode.nextSibling.textContent = \"已派工\";\n\tevent.target.parentNode.parentNode.nextSibling.style.color = \"blue\";\n}\nclass SortableTable extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdataSource: this.props.data,\n\t\t\tmetadata: this.props.metadata\n\t\t};\n    }\n    /*onSortEnd = ({ oldIndex, newIndex }) => {\n    \tconst { dataSource } = this.state;\n    \tif (oldIndex !== newIndex) {\n    \t\tconst newData = arrayMove([].concat(dataSource), oldIndex, newIndex).filter(el => !!el);\n        \tconsole.log('Sorted items: ', newData);\n        \tthis.setState({ dataSource: newData });\n    \t}\n    };\n    DraggableContainer = props => (\n    \t<SortableContainer\n    \t\tuseDragHandle\n        \tdisableAutoscroll\n        \thelperClass=\"row-dragging\"\n        \tonSortEnd={this.onSortEnd}\n        \t{...props}\n      \t/>\n    );\n  \n    DraggableBodyRow = ({ className, style, ...restProps }) => {\n      \tconst { dataSource } = this.state;\n      \tconst index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\n      \treturn <SortableItem index={index} {...restProps} />;\n    };*/\n  \n    render() {\n      \tconst { dataSource } = this.state;\n      \treturn (\n        \t<Table\n          \t\tpagination={false}\n          \t\tcolumns={this.props.metadata}\n\t\t\t\tdataSource ={this.props.data}\n          \t\trowKey=\"index\"\n          \t\tcomponents={\n\t\t\t\t\t{\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\twrapper: this.DraggableContainer,\n\t\t\t\t\t\t\trow: this.DraggableBodyRow,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n        \t/>\n      \t);\n    }\n}\n\nexport default SortableTable"]},"metadata":{},"sourceType":"module"}