{"ast":null,"code":"var _jsxFileName = \"/Users/tim/Documents/React/React_test/src/InputFile.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport InputFiles from 'react-input-files';\nimport XLSX from 'xlsx';\nimport SortableTable from './SortableTable';\nimport * as script from './Script.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InputFile extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onImportExcel = files => {\n      const fileReader = new FileReader();\n\n      for (let index = 0; index < files.length; index++) fileReader.name = files[index].name;\n\n      fileReader.onload = event => {\n        try {\n          const fileExt = event.target.name;\n          if (fileExt == null) throw RangeError(\"檔案為空值\");\n          const {\n            result\n          } = event.target;\n          const workbook = XLSX.read(result, {\n            type: \"binary\"\n          });\n          let excel = [];\n          excel = excel.concat(XLSX.utils.sheet_to_json(workbook.Sheets['DX']));\n          console.log(excel); //461\n\n          var data = script.getExcel(excel);\n          console.log(data);\n          var metadata = script.getMetadate();\n          ReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(InputFiles, {\n              accept: this.props.accept,\n              onChange: this.onImportExcel,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                children: this.props.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(SortableTable, {\n              data: data,\n              metadata: metadata\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), document.getElementById('root'));\n        } catch (e) {\n          alert(e);\n          return;\n        }\n      };\n\n      fileReader.readAsBinaryString(files[0]);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(InputFiles, {\n        accept: this.props.accept,\n        onChange: this.onImportExcel,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: this.props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default InputFile;","map":{"version":3,"sources":["/Users/tim/Documents/React/React_test/src/InputFile.js"],"names":["React","ReactDOM","InputFiles","XLSX","SortableTable","script","InputFile","Component","onImportExcel","files","fileReader","FileReader","index","length","name","onload","event","fileExt","target","RangeError","result","workbook","read","type","excel","concat","utils","sheet_to_json","Sheets","console","log","data","getExcel","metadata","getMetadate","render","props","accept","document","getElementById","e","alert","readAsBinaryString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport InputFiles from 'react-input-files';\nimport XLSX from 'xlsx';\nimport SortableTable from './SortableTable';\nimport * as script from './Script.js';\n\nclass InputFile extends React.Component{\n    render(){\n        return (\n            <div>\n                <InputFiles accept={this.props.accept} onChange={this.onImportExcel}>\n                    <button className=\"btn btn-primary\">{this.props.name}</button>\n                </InputFiles>\n            </div>\n        );\n    };\n    onImportExcel = files => {\n        const fileReader = new FileReader();\n        for (let index = 0; index < files.length; index++)\n            fileReader.name = files[index].name;\n        fileReader.onload = event => {\n            try {\n                const fileExt = event.target.name;\n                if (fileExt == null)\n                    throw RangeError(\"檔案為空值\");\n                const { result } = event.target;\n                const workbook = XLSX.read(result, { type: \"binary\" });\n                let excel = [];\n                excel = excel.concat(\n                    XLSX.utils.sheet_to_json(workbook.Sheets['DX'])\n                );\n                console.log(excel); //461\n                var data = script.getExcel(excel);\n                console.log(data);\n                var metadata = script.getMetadate();\n                ReactDOM.render(\n                    <div>\n                        <InputFiles accept={this.props.accept} onChange={this.onImportExcel}>\n                            <button className=\"btn btn-primary\">{this.props.name}</button>\n                        </InputFiles>\n                        <SortableTable data={data} metadata={metadata}/>\n                    </div>, \n                    document.getElementById('root'));\n            } catch (e) {\n                alert(e);\n                return;\n            }\n        };\n        fileReader.readAsBinaryString(files[0]);\n    };\n}\nexport default InputFile;"]},"metadata":{},"sourceType":"module"}