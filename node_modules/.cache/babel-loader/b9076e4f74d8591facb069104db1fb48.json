{"ast":null,"code":"var _jsxFileName = \"/Users/tim/Documents/React/React_test/src/SortableTable.js\";\nimport React from \"react\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport { MenuOutlined } from '@ant-design/icons';\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\nimport { Button, Table } from 'antd';\nimport arrayMove from 'array-move';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DragHandle = sortableHandle(_c = () => /*#__PURE__*/_jsxDEV(MenuOutlined, {\n  style: {\n    cursor: 'grab',\n    color: '#999'\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 41\n}, this));\n_c2 = DragHandle;\n\nfunction changeOrderStatus(event) {\n  event.target.parentNode.parentNode.nextSibling.textContent = \"已派工\";\n  event.target.parentNode.parentNode.nextSibling.style.color = \"blue\";\n}\n\nconst SortableItem = sortableElement(_c3 = props => /*#__PURE__*/_jsxDEV(\"tr\", { ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 47\n}, this));\n_c4 = SortableItem;\nconst SortableContainer = sortableContainer(_c5 = props => /*#__PURE__*/_jsxDEV(\"tbody\", { ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 54\n}, this));\n_c6 = SortableContainer;\nvar a = [];\n\nclass SortableTable extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onSortEnd = ({\n      oldIndex,\n      newIndex\n    }) => {\n      var {\n        dataSource\n      } = this.state;\n\n      if (oldIndex !== newIndex) {\n        console.log(oldIndex, newIndex);\n        var newData = arrayMove([].concat(dataSource), oldIndex, newIndex).filter(el => !!el);\n        console.log('Sorted items: ', newData); //this.setState({ dataSource: newData });\n\n        this.state.dataSource = this.props.data;\n      }\n    };\n\n    this.DraggableContainer = props => /*#__PURE__*/_jsxDEV(SortableContainer, {\n      useDragHandle: true,\n      disableAutoscroll: true,\n      helperClass: \"row-dragging\",\n      onSortEnd: this.onSortEnd,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this);\n\n    this.DraggableBodyRow = ({\n      className,\n      style,\n      ...restProps\n    }) => {\n      var {\n        dataSource\n      } = this.state;\n      var index = 0;\n\n      if (dataSource.length > 0) {\n        index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\n      }\n\n      return /*#__PURE__*/_jsxDEV(SortableItem, {\n        index: index,\n        ...restProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }, this);\n    };\n\n    this.state = {\n      dataSource: []\n    };\n  }\n\n  render() {\n    var {\n      dataSource\n    } = this.state; //if(!!this.props.data)\n\n    a = this.props.data;\n    console.log(a);\n    this.state.dataSource = this.props.data;\n    return /*#__PURE__*/_jsxDEV(Table, {\n      pagination: false,\n      dataSource: this.props.data,\n      columns: this.props.metadata,\n      rowKey: \"index\",\n      components: {\n        body: {\n          wrapper: this.DraggableContainer,\n          row: this.DraggableBodyRow\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n/*class SortableTable extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdataSource: [],\n\t\t};\n    }\n    onSortEnd = ({ oldIndex, newIndex }) => {\n\t\tif (oldIndex !== newIndex) {\n\t\t\tthis.props.data = arrayMove([].concat(this.props.data), oldIndex, newIndex).filter(el => !!el);\n\t\t}\n\t};\n    DraggableContainer = props => (\n    \t<SortableContainer\n    \t\tuseDragHandle\n        \tdisableAutoscroll\n        \thelperClass=\"row-dragging\"\n        \tonSortEnd={this.onSortEnd}\n        \t{...props}\n      \t/>\n    );\n  \n    DraggableBodyRow = ({ className, style, ...restProps }) => {\n\t\tconst { dataSource } = this.state;\n\t\tconst index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\n\t\treturn <SortableItem index={index} {...restProps} />;\n    };\n    render() {\n      \treturn (\n        \t<Table\n          \t\tpagination={false}\n          \t\tcolumns={this.props.metadata}\n\t\t\t\tdataSource ={this.props.data}\n          \t\trowKey=\"index\"\n          \t\tcomponents={\n\t\t\t\t\t{\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\twrapper: this.DraggableContainer,\n\t\t\t\t\t\t\trow: this.DraggableBodyRow,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n        \t/>\n      \t);\n    }\n}*/\n\n\nexport default SortableTable;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"DragHandle$sortableHandle\");\n$RefreshReg$(_c2, \"DragHandle\");\n$RefreshReg$(_c3, \"SortableItem$sortableElement\");\n$RefreshReg$(_c4, \"SortableItem\");\n$RefreshReg$(_c5, \"SortableContainer$sortableContainer\");\n$RefreshReg$(_c6, \"SortableContainer\");","map":{"version":3,"sources":["/Users/tim/Documents/React/React_test/src/SortableTable.js"],"names":["React","ReactTable","MenuOutlined","sortableContainer","sortableElement","sortableHandle","Button","Table","arrayMove","DragHandle","cursor","color","changeOrderStatus","event","target","parentNode","nextSibling","textContent","style","SortableItem","props","SortableContainer","a","SortableTable","Component","constructor","onSortEnd","oldIndex","newIndex","dataSource","state","console","log","newData","concat","filter","el","data","DraggableContainer","DraggableBodyRow","className","restProps","index","length","findIndex","x","render","metadata","body","wrapper","row"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport ReactTable from \"react-table-6\";  \nimport \"react-table-6/react-table.css\";\nimport { MenuOutlined } from '@ant-design/icons';\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\nimport { Button,Table } from 'antd';\nimport arrayMove from 'array-move';\n\n\nconst DragHandle = sortableHandle(() => <MenuOutlined style={{ cursor: 'grab', color: '#999' }} />);\nfunction changeOrderStatus(event){\n\tevent.target.parentNode.parentNode.nextSibling.textContent = \"已派工\";\n\tevent.target.parentNode.parentNode.nextSibling.style.color = \"blue\";\n}\n\nconst SortableItem = sortableElement(props => <tr {...props} />);\nconst SortableContainer = sortableContainer(props => <tbody {...props} />);\n\nvar a=[];\nclass SortableTable extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdataSource: []\n\t\t};\n    }\n\t\n  \n\tonSortEnd = ({ oldIndex, newIndex }) => {\n\t\t\n\t  var { dataSource } = this.state;\n\t  \n\t  if (oldIndex !== newIndex) {\n\t\tconsole.log(oldIndex,newIndex);\n\t\tvar newData = arrayMove([].concat(dataSource), oldIndex, newIndex).filter(el => !!el);\n\t\tconsole.log('Sorted items: ', newData);\n\t\t//this.setState({ dataSource: newData });\n\t\tthis.state.dataSource = this.props.data;\n\t  }\n\t};\n  \n\tDraggableContainer = props => (\n\t  <SortableContainer\n\t\tuseDragHandle\n\t\tdisableAutoscroll\n\t\thelperClass=\"row-dragging\"\n\t\tonSortEnd={this.onSortEnd}\n\t\t{...props}\n\t  />\n\t);\n  \n\tDraggableBodyRow = ({ className, style, ...restProps }) => {\n\t  \tvar { dataSource } = this.state;\n\t\tvar index = 0;\n\t\t\n\t\tif(dataSource.length > 0){\n\t\t\tindex = dataSource.findIndex(x => x.index === restProps['data-row-key']);\n\t\t}\n\t\treturn <SortableItem index={index} {...restProps} />;\n\t};\n  \n\trender() {\n\t\tvar { dataSource } = this.state;\n\t\t//if(!!this.props.data)\n\t\ta = this.props.data;\n\t\tconsole.log(a);\n\t\tthis.state.dataSource = this.props.data;\n\t  return (\n\t\t<Table\n\t\t  pagination={false}\n\t\t  dataSource={this.props.data}\n\t\t  columns={this.props.metadata}\n\t\t  rowKey=\"index\"\n\t\t  components={{\n\t\t\tbody: {\n\t\t\t  wrapper: this.DraggableContainer,\n\t\t\t  row: this.DraggableBodyRow,\n\t\t\t},\n\t\t  }}\n\t\t/>\n\t  );\n\t}\n  }\n\n/*class SortableTable extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdataSource: [],\n\t\t};\n    }\n    onSortEnd = ({ oldIndex, newIndex }) => {\n\t\tif (oldIndex !== newIndex) {\n\t\t\tthis.props.data = arrayMove([].concat(this.props.data), oldIndex, newIndex).filter(el => !!el);\n\t\t}\n\t};\n    DraggableContainer = props => (\n    \t<SortableContainer\n    \t\tuseDragHandle\n        \tdisableAutoscroll\n        \thelperClass=\"row-dragging\"\n        \tonSortEnd={this.onSortEnd}\n        \t{...props}\n      \t/>\n    );\n  \n    DraggableBodyRow = ({ className, style, ...restProps }) => {\n\t\tconst { dataSource } = this.state;\n\t\tconst index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\n\t\treturn <SortableItem index={index} {...restProps} />;\n    };\n    render() {\n      \treturn (\n        \t<Table\n          \t\tpagination={false}\n          \t\tcolumns={this.props.metadata}\n\t\t\t\tdataSource ={this.props.data}\n          \t\trowKey=\"index\"\n          \t\tcomponents={\n\t\t\t\t\t{\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\twrapper: this.DraggableContainer,\n\t\t\t\t\t\t\trow: this.DraggableBodyRow,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n        \t/>\n      \t);\n    }\n}*/\n\nexport default SortableTable"]},"metadata":{},"sourceType":"module"}