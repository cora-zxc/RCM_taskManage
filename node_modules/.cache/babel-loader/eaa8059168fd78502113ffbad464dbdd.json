{"ast":null,"code":"var _jsxFileName = \"/Users/tim/Documents/RCM_taskManage/src/InputFile.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport InputFiles from 'react-input-files';\nimport XLSX from 'xlsx';\nimport SortableTable from './SortableTable';\nimport './index.css';\nimport ManuallyCreate from './ManuallyCreate';\nimport { Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InputFile extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getExcel = excel => {\n      //8碼日期y+m+d\n      let date = new Date();\n      var y = date.getFullYear().toString();\n      var m = (date.getMonth() + 1).toString();\n\n      if (m < 10) {\n        m = \"0\" + m;\n      }\n\n      var d = date.getDate().toString();\n\n      if (d < 10) {\n        d = \"0\" + d;\n      } //欄位資料的建構式\n\n\n      class MachineInfo {\n        constructor(index, taskId, produceBatchNo, productModelNo, currentQuantity, machinePosition) {\n          this.key = '';\n          this.action = '';\n          this.currentStatus = '未派工';\n          this.eRackPositionNotTested = '';\n          this.eRackPositionTested = '';\n          this.pv = '50';\n          this.index = index;\n          this.taskId = taskId;\n          this.produceBatchNo = produceBatchNo;\n          this.productModelNo = productModelNo;\n          this.currentQuantity = currentQuantity;\n          this.machinePosition = machinePosition;\n        }\n\n      } //迴圈取資料\n\n\n      var data = [];\n      var i = 0,\n          j,\n          k;\n      var m_index = 0;\n      var m_taskId, m_produceBatchNo, m_productModelNo, m_currentQuantity, m_machinePosition;\n\n      for (; excel.length > i; ++i) {\n        if (excel[i].hasOwnProperty('矽格股份有限公司')) {\n          if (excel[i]['矽格股份有限公司'].hasOwnProperty('length')) {\n            if (excel[i]['矽格股份有限公司'].indexOf('DX-') > -1) {\n              m_machinePosition = excel[i]['矽格股份有限公司'];\n\n              for (j = i + 2, k = 0; 4 > k && excel.length > j && excel[j].hasOwnProperty('__EMPTY_2'); ++j, ++k) {\n                m_taskId = y + m + d + excel[j].__EMPTY_2;\n                m_produceBatchNo = excel[j].__EMPTY_2;\n                m_productModelNo = excel[j].__EMPTY_4;\n                m_currentQuantity = excel[j].__EMPTY_7;\n                data[m_index] = new MachineInfo(m_index, m_taskId, m_produceBatchNo, m_productModelNo, m_currentQuantity, m_machinePosition);\n                ++m_index;\n              }\n\n              if (excel[i].hasOwnProperty('__EMPTY_12')) {\n                m_machinePosition = excel[i].__EMPTY_12;\n\n                for (j = i + 2, k = 0; 4 > k && excel.length > j && excel[j].hasOwnProperty('__EMPTY_15'); ++j, ++k) {\n                  m_taskId = y + m + d + excel[j].__EMPTY_15;\n                  m_produceBatchNo = excel[j].__EMPTY_15;\n                  m_productModelNo = excel[j].__EMPTY_17;\n                  m_currentQuantity = excel[j].__EMPTY_20;\n                  data[m_index] = new MachineInfo(m_index, m_taskId, m_produceBatchNo, m_productModelNo, m_currentQuantity, m_machinePosition);\n                  ++m_index;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return data;\n    };\n\n    this.onImportExcel = files => {\n      const fileReader = new FileReader();\n\n      for (let index = 0; index < files.length; index++) fileReader.name = files[index].name;\n\n      fileReader.onload = event => {\n        try {\n          const fileExt = event.target.name;\n          if (fileExt == null) throw RangeError(\"檔案為空值\");\n          const {\n            result\n          } = event.target;\n          const workbook = XLSX.read(result, {\n            type: \"binary\"\n          });\n          let excel = [];\n          excel = excel.concat(XLSX.utils.sheet_to_json(workbook.Sheets['DX']));\n          console.log(excel); //array 461筆\n          //\n\n          var exceldata = this.getExcel(excel);\n          console.log(exceldata); //array 300筆\n\n          ReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), document.getElementById('root'));\n          ReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(InputFiles, {\n              accept: this.props.accept,\n              onChange: this.onImportExcel,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"extractButton\",\n                type: \"primary\",\n                children: this.props.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ManuallyCreate, {\n              name: \"\\u624B\\u52D5\\u65B0\\u589E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(SortableTable, {\n              data: exceldata\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), document.getElementById('root'));\n        } catch (e) {\n          alert(e);\n          return;\n        }\n      };\n\n      fileReader.readAsBinaryString(files[0]);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(InputFiles, {\n        accept: this.props.accept,\n        onChange: this.onImportExcel,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"extractButton\",\n          type: \"primary\",\n          children: this.props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default InputFile;","map":{"version":3,"sources":["/Users/tim/Documents/RCM_taskManage/src/InputFile.js"],"names":["React","ReactDOM","InputFiles","XLSX","SortableTable","ManuallyCreate","Button","InputFile","Component","getExcel","excel","date","Date","y","getFullYear","toString","m","getMonth","d","getDate","MachineInfo","constructor","index","taskId","produceBatchNo","productModelNo","currentQuantity","machinePosition","key","action","currentStatus","eRackPositionNotTested","eRackPositionTested","pv","data","i","j","k","m_index","m_taskId","m_produceBatchNo","m_productModelNo","m_currentQuantity","m_machinePosition","length","hasOwnProperty","indexOf","__EMPTY_2","__EMPTY_4","__EMPTY_7","__EMPTY_12","__EMPTY_15","__EMPTY_17","__EMPTY_20","onImportExcel","files","fileReader","FileReader","name","onload","event","fileExt","target","RangeError","result","workbook","read","type","concat","utils","sheet_to_json","Sheets","console","log","exceldata","render","document","getElementById","props","accept","e","alert","readAsBinaryString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport InputFiles from 'react-input-files';\nimport XLSX from 'xlsx';\nimport SortableTable from './SortableTable';\nimport './index.css';\nimport ManuallyCreate from './ManuallyCreate';\nimport { Button } from 'antd';\n\n\nclass InputFile extends React.Component{\n    getExcel = (excel) => {\n        //8碼日期y+m+d\n\t\tlet date = new Date();\n\t\tvar y = date.getFullYear().toString();\n\t\tvar m = (date.getMonth()+1).toString();\n\t\t\tif(m < 10){\n\t\t\t\tm = \"0\" + m;\n\t\t\t}\n\t\tvar d = date.getDate().toString();\n            if (d < 10){\n                d = \"0\" + d ;\n            }\n        //欄位資料的建構式\n        class MachineInfo{\n            constructor(index,taskId,produceBatchNo,productModelNo,currentQuantity,machinePosition){\n              this.index = index;\n              this.taskId = taskId;\n              this.produceBatchNo = produceBatchNo;\n              this.productModelNo = productModelNo;\n              this.currentQuantity = currentQuantity;\n              this.machinePosition = machinePosition;\n            }\n            key = '';\n            action = '';\n            currentStatus = '未派工';\n            eRackPositionNotTested = '';\n            eRackPositionTested = '';\n            pv= '50';\n        }\n        //迴圈取資料\n        var data = [];\n\t\tvar i = 0,j,k;\n        var m_index = 0;\n        var m_taskId,m_produceBatchNo,m_productModelNo,m_currentQuantity,m_machinePosition;\n\t\tfor(;excel.length > i; ++i){\n\t\t\tif(excel[i].hasOwnProperty('矽格股份有限公司')){\n\t\t\t\tif(excel[i]['矽格股份有限公司'].hasOwnProperty('length')){  \n\t\t\t\t\tif(excel[i]['矽格股份有限公司'].indexOf('DX-') > -1){\n\t\t\t\t\t\tm_machinePosition = excel[i]['矽格股份有限公司'];\n\t\t\t\t\t\tfor(j = i + 2,k = 0;4 > k && excel.length > j && excel[j].hasOwnProperty('__EMPTY_2');++j,++k){\n\t\t\t\t\t\t\tm_taskId =  y + m + d + excel[j].__EMPTY_2;\n\t\t\t\t\t\t\tm_produceBatchNo = excel[j].__EMPTY_2;\n\t\t\t\t\t\t\tm_productModelNo = excel[j].__EMPTY_4;\n\t\t\t\t\t\t\tm_currentQuantity = excel[j].__EMPTY_7;\n\t\t\t\t\t\t\tdata[m_index] = new MachineInfo(m_index,m_taskId,m_produceBatchNo,m_productModelNo,m_currentQuantity,m_machinePosition);\n\t\t\t\t\t\t\t++m_index;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(excel[i].hasOwnProperty('__EMPTY_12')){\n\t\t\t\t\t\t\tm_machinePosition = excel[i].__EMPTY_12;\n\t\t\t\t\t\t\tfor(j = i + 2,k = 0;4 > k && excel.length > j && excel[j].hasOwnProperty('__EMPTY_15');++j,++k){\n\t\t\t\t\t\t\t\tm_taskId =  y + m + d + excel[j].__EMPTY_15;\n\t\t\t\t\t\t\t\tm_produceBatchNo = excel[j].__EMPTY_15;\n\t\t\t\t\t\t\t\tm_productModelNo = excel[j].__EMPTY_17;\n\t\t\t\t\t\t\t\tm_currentQuantity = excel[j].__EMPTY_20;\n\t\t\t\t\t\t\t\tdata[m_index] = new MachineInfo(m_index,m_taskId,m_produceBatchNo,m_productModelNo,m_currentQuantity,m_machinePosition);\n\t\t\t\t\t\t\t\t++m_index;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t}\n    onImportExcel = files => {\n        const fileReader = new FileReader();\n        for (let index = 0; index < files.length; index++)\n            fileReader.name = files[index].name;\n        fileReader.onload = event => {\n            try {\n                const fileExt = event.target.name;\n                if (fileExt == null)\n                    throw RangeError(\"檔案為空值\");\n                const { result } = event.target;\n                const workbook = XLSX.read(result, { type: \"binary\" });\n                let excel = [];\n                excel = excel.concat(\n                    XLSX.utils.sheet_to_json(workbook.Sheets['DX'])\n                );\n                console.log(excel); //array 461筆\n                //\n                var exceldata = this.getExcel(excel);\n                console.log(exceldata); //array 300筆\n                ReactDOM.render(\n                    <div></div>, \n                    document.getElementById('root'));\n                ReactDOM.render(\n                    <div>\n                        <InputFiles accept={this.props.accept} onChange={this.onImportExcel}>\n                            <Button className=\"extractButton\" type=\"primary\">{this.props.name}</Button>\n                        </InputFiles>\n                        <ManuallyCreate name=\"手動新增\" />\n                        <SortableTable data={exceldata} />\n                    </div>, \n                    document.getElementById('root'));\n            } catch (e) {\n                alert(e);\n                return;\n            }\n        };\n        fileReader.readAsBinaryString(files[0]);\n    };\n    render(){\n        return (\n            <span>\n                <InputFiles accept={this.props.accept} onChange={this.onImportExcel}>\n                    <Button className=\"extractButton\" type=\"primary\">\n                        {this.props.name}\n                    </Button>\n                </InputFiles>\n            </span>\n        );\n    };\n}\nexport default InputFile;"]},"metadata":{},"sourceType":"module"}